# Generated by Django 5.1.4 on 2025-04-01 09:34

import datetime
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deadline', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='userRoles',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('roles', models.CharField(choices=[('Strategic Affairs', 'Strategic Affairs'), ('Minister', 'Minister'), ('State', 'State'), ('CEO', 'CEO'), ('Departments', 'Departments'), ('Affiliated', 'Affiliated'), ('Supporting', 'Supporting')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Office Name')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userroles', to='api.userroles')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_budget', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KRA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kras', to='api.goal')),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit', models.CharField(choices=[('Number', 'Number'), ('Percent', 'Percent')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('kra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpis', to='api.kra')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='notifications/attachments/')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ManyToManyField(related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=50)),
                ('quarter', models.IntegerField(choices=[(1, 'Quarter 1'), (2, 'Quarter 2'), (3, 'Quarter 3'), (4, 'Quarter 4')])),
                ('receivers', models.ManyToManyField(blank=True, related_name='received_plan_docs', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_plan_docs', to='api.year')),
            ],
        ),
        migrations.CreateModel(
            name='QuarterlyReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('feedback', models.CharField(default='No feedback', max_length=50)),
                ('submission_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('quarter_1', models.IntegerField()),
                ('quarter_2', models.IntegerField(default='N/A')),
                ('quarter_3', models.IntegerField(default='N/A')),
                ('quarter_4', models.IntegerField(default='N/A')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.kpi')),
                ('receivers', models.ManyToManyField(blank=True, related_name='quarterly_reports_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ManyToManyField(blank=True, related_name='quarterly_reports_sent', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.year')),
            ],
        ),
        migrations.CreateModel(
            name='PlanDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=50)),
                ('receivers', models.ManyToManyField(blank=True, related_name='received_report_docs', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
                ('year', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_report_docs', to='api.year')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=50)),
                ('feedback', models.CharField(default='No feedback', max_length=50)),
                ('submission_date', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=50)),
                ('target', models.IntegerField()),
                ('quarter_1', models.IntegerField()),
                ('quarter_2', models.IntegerField()),
                ('quarter_3', models.IntegerField()),
                ('quarter_4', models.IntegerField()),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan', to='api.kpi')),
                ('receivers', models.ManyToManyField(blank=True, related_name='submitted_plans', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='api.year')),
            ],
        ),
        migrations.CreateModel(
            name='KPIValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.FloatField()),
                ('actual', models.FloatField()),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='api.kpi')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_values', to='api.year')),
            ],
        ),
    ]
